// Mocks generated by Mockito 5.3.0 from annotations
// in ditonton/test/presentation/provider/tv/tv_show_list_notifier_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:dartz/dartz.dart' as _i3;
import 'package:ditonton/common/failure.dart' as _i7;
import 'package:ditonton/domain/entities/movie/movie.dart' as _i10;
import 'package:ditonton/domain/entities/tv/tv_show.dart' as _i8;
import 'package:ditonton/domain/repositories/movie_repository.dart' as _i4;
import 'package:ditonton/domain/repositories/tv_show_repository.dart' as _i2;
import 'package:ditonton/domain/usecases/movie/get_popular_movies.dart' as _i9;
import 'package:ditonton/domain/usecases/tv/get_now_playing_tvs.dart' as _i5;
import 'package:ditonton/domain/usecases/tv/get_top_rated_tvs.dart' as _i11;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTvShowRepository_0 extends _i1.SmartFake
    implements _i2.TvShowRepository {
  _FakeTvShowRepository_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeMovieRepository_2 extends _i1.SmartFake
    implements _i4.MovieRepository {
  _FakeMovieRepository_2(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [GetNowPlayingTvs].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetNowPlayingTvs extends _i1.Mock implements _i5.GetNowPlayingTvs {
  MockGetNowPlayingTvs() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvShowRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
              returnValue:
                  _FakeTvShowRepository_0(this, Invocation.getter(#repository)))
          as _i2.TvShowRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, List<_i8.TvShow>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
              returnValue:
                  _i6.Future<_i3.Either<_i7.Failure, List<_i8.TvShow>>>.value(
                      _FakeEither_1<_i7.Failure, List<_i8.TvShow>>(
                          this, Invocation.method(#execute, []))))
          as _i6.Future<_i3.Either<_i7.Failure, List<_i8.TvShow>>>);
}

/// A class which mocks [GetPopularMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPopularMovies extends _i1.Mock implements _i9.GetPopularMovies {
  MockGetPopularMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
              returnValue:
                  _FakeMovieRepository_2(this, Invocation.getter(#repository)))
          as _i4.MovieRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, List<_i10.Movie>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
              returnValue:
                  _i6.Future<_i3.Either<_i7.Failure, List<_i10.Movie>>>.value(
                      _FakeEither_1<_i7.Failure, List<_i10.Movie>>(
                          this, Invocation.method(#execute, []))))
          as _i6.Future<_i3.Either<_i7.Failure, List<_i10.Movie>>>);
}

/// A class which mocks [GetTopRatedTvs].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTopRatedTvs extends _i1.Mock implements _i11.GetTopRatedTvs {
  MockGetTopRatedTvs() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvShowRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
              returnValue:
                  _FakeTvShowRepository_0(this, Invocation.getter(#repository)))
          as _i2.TvShowRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, List<_i8.TvShow>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
              returnValue:
                  _i6.Future<_i3.Either<_i7.Failure, List<_i8.TvShow>>>.value(
                      _FakeEither_1<_i7.Failure, List<_i8.TvShow>>(
                          this, Invocation.method(#execute, []))))
          as _i6.Future<_i3.Either<_i7.Failure, List<_i8.TvShow>>>);
}
