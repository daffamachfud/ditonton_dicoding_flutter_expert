// Mocks generated by Mockito 5.3.0 from annotations
// in ditonton/test/helpers/tv/tv_show_test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:convert' as _i17;
import 'dart:typed_data' as _i18;

import 'package:dartz/dartz.dart' as _i2;
import 'package:ditonton/common/failure.dart' as _i7;
import 'package:ditonton/data/datasources/db/database_helper.dart' as _i14;
import 'package:ditonton/data/datasources/tv/tv_show_local_data_source.dart'
    as _i12;
import 'package:ditonton/data/datasources/tv/tv_show_remote_data_source.dart'
    as _i10;
import 'package:ditonton/data/models/movie/movie_table.dart' as _i16;
import 'package:ditonton/data/models/tv/tv_show_detail_model.dart' as _i3;
import 'package:ditonton/data/models/tv/tv_show_model.dart' as _i11;
import 'package:ditonton/data/models/tv/tv_show_table.dart' as _i13;
import 'package:ditonton/domain/entities/tv/tv_show.dart' as _i8;
import 'package:ditonton/domain/entities/tv/tv_show_detail.dart' as _i9;
import 'package:ditonton/domain/repositories/tv_show_repository.dart' as _i5;
import 'package:http/http.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sqflite/sqflite.dart' as _i15;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeTvShowDetailResponse_1 extends _i1.SmartFake
    implements _i3.TvShowDetailResponse {
  _FakeTvShowDetailResponse_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeResponse_2 extends _i1.SmartFake implements _i4.Response {
  _FakeResponse_2(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeStreamedResponse_3 extends _i1.SmartFake
    implements _i4.StreamedResponse {
  _FakeStreamedResponse_3(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [TvShowRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvShowRepository extends _i1.Mock implements _i5.TvShowRepository {
  MockTvShowRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.TvShow>>> getNowPlayingTvs() =>
      (super.noSuchMethod(Invocation.method(#getNowPlayingTvs, []),
              returnValue:
                  _i6.Future<_i2.Either<_i7.Failure, List<_i8.TvShow>>>.value(
                      _FakeEither_0<_i7.Failure, List<_i8.TvShow>>(
                          this, Invocation.method(#getNowPlayingTvs, []))))
          as _i6.Future<_i2.Either<_i7.Failure, List<_i8.TvShow>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.TvShow>>> getPopularTvs() =>
      (super
          .noSuchMethod(Invocation.method(#getPopularTvs, []),
              returnValue:
                  _i6.Future<_i2.Either<_i7.Failure, List<_i8.TvShow>>>.value(
                      _FakeEither_0<_i7.Failure, List<_i8.TvShow>>(
                          this, Invocation.method(#getPopularTvs, [])))) as _i6
          .Future<_i2.Either<_i7.Failure, List<_i8.TvShow>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.TvShow>>> getTopRatedTvs() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedTvs, []),
              returnValue:
                  _i6.Future<_i2.Either<_i7.Failure, List<_i8.TvShow>>>.value(
                      _FakeEither_0<_i7.Failure, List<_i8.TvShow>>(
                          this, Invocation.method(#getTopRatedTvs, []))))
          as _i6.Future<_i2.Either<_i7.Failure, List<_i8.TvShow>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, _i9.TvShowDetail>> getTvShowDetail(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvShowDetail, [id]),
              returnValue:
                  _i6.Future<_i2.Either<_i7.Failure, _i9.TvShowDetail>>.value(
                      _FakeEither_0<_i7.Failure, _i9.TvShowDetail>(
                          this, Invocation.method(#getTvShowDetail, [id]))))
          as _i6.Future<_i2.Either<_i7.Failure, _i9.TvShowDetail>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.TvShow>>>
      getTvShowRecommendations(int? id) => (super.noSuchMethod(
              Invocation.method(#getTvShowRecommendations, [id]),
              returnValue:
                  _i6.Future<_i2.Either<_i7.Failure, List<_i8.TvShow>>>.value(
                      _FakeEither_0<_i7.Failure, List<_i8.TvShow>>(this,
                          Invocation.method(#getTvShowRecommendations, [id]))))
          as _i6.Future<_i2.Either<_i7.Failure, List<_i8.TvShow>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.TvShow>>> searchTvs(
          String? query) =>
      (super.noSuchMethod(Invocation.method(#searchTvs, [query]),
              returnValue:
                  _i6.Future<_i2.Either<_i7.Failure, List<_i8.TvShow>>>.value(
                      _FakeEither_0<_i7.Failure, List<_i8.TvShow>>(
                          this, Invocation.method(#searchTvs, [query]))))
          as _i6.Future<_i2.Either<_i7.Failure, List<_i8.TvShow>>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, String>> saveWatchlist(
          _i9.TvShowDetail? tvShow) =>
      (super.noSuchMethod(Invocation.method(#saveWatchlist, [tvShow]),
              returnValue: _i6.Future<_i2.Either<_i7.Failure, String>>.value(
                  _FakeEither_0<_i7.Failure, String>(
                      this, Invocation.method(#saveWatchlist, [tvShow]))))
          as _i6.Future<_i2.Either<_i7.Failure, String>>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, String>> removeWatchlist(
          _i9.TvShowDetail? tvShow) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [tvShow]),
              returnValue: _i6.Future<_i2.Either<_i7.Failure, String>>.value(
                  _FakeEither_0<_i7.Failure, String>(
                      this, Invocation.method(#removeWatchlist, [tvShow]))))
          as _i6.Future<_i2.Either<_i7.Failure, String>>);
  @override
  _i6.Future<bool> isAddedToWatchlist(int? id) =>
      (super.noSuchMethod(Invocation.method(#isAddedToWatchlist, [id]),
          returnValue: _i6.Future<bool>.value(false)) as _i6.Future<bool>);
  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.TvShow>>> getWatchlistTvs() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistTvs, []),
              returnValue:
                  _i6.Future<_i2.Either<_i7.Failure, List<_i8.TvShow>>>.value(
                      _FakeEither_0<_i7.Failure, List<_i8.TvShow>>(
                          this, Invocation.method(#getWatchlistTvs, []))))
          as _i6.Future<_i2.Either<_i7.Failure, List<_i8.TvShow>>>);
}

/// A class which mocks [TvShowRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvShowRemoteDataSource extends _i1.Mock
    implements _i10.TvShowRemoteDataSource {
  MockTvShowRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<List<_i11.TvShowModel>> getNowPlayingTvs() => (super.noSuchMethod(
          Invocation.method(#getNowPlayingTvs, []),
          returnValue:
              _i6.Future<List<_i11.TvShowModel>>.value(<_i11.TvShowModel>[]))
      as _i6.Future<List<_i11.TvShowModel>>);
  @override
  _i6.Future<List<_i11.TvShowModel>> getPopularTvs() => (super.noSuchMethod(
          Invocation.method(#getPopularTvs, []),
          returnValue:
              _i6.Future<List<_i11.TvShowModel>>.value(<_i11.TvShowModel>[]))
      as _i6.Future<List<_i11.TvShowModel>>);
  @override
  _i6.Future<List<_i11.TvShowModel>> getTopRatedTvs() => (super.noSuchMethod(
          Invocation.method(#getTopRatedTvs, []),
          returnValue:
              _i6.Future<List<_i11.TvShowModel>>.value(<_i11.TvShowModel>[]))
      as _i6.Future<List<_i11.TvShowModel>>);
  @override
  _i6.Future<_i3.TvShowDetailResponse> getTvDetail(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvDetail, [id]),
              returnValue: _i6.Future<_i3.TvShowDetailResponse>.value(
                  _FakeTvShowDetailResponse_1(
                      this, Invocation.method(#getTvDetail, [id]))))
          as _i6.Future<_i3.TvShowDetailResponse>);
  @override
  _i6.Future<List<_i11.TvShowModel>> getTvRecommendations(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvRecommendations, [id]),
          returnValue: _i6.Future<List<_i11.TvShowModel>>.value(
              <_i11.TvShowModel>[])) as _i6.Future<List<_i11.TvShowModel>>);
  @override
  _i6.Future<List<_i11.TvShowModel>> searchTvs(String? query) =>
      (super.noSuchMethod(Invocation.method(#searchTvs, [query]),
          returnValue: _i6.Future<List<_i11.TvShowModel>>.value(
              <_i11.TvShowModel>[])) as _i6.Future<List<_i11.TvShowModel>>);
}

/// A class which mocks [TvShowLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvShowLocalDataSource extends _i1.Mock
    implements _i12.TvShowLocalDataSource {
  MockTvShowLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<String> insertTvWatchlist(_i13.TvShowTable? tvShow) =>
      (super.noSuchMethod(Invocation.method(#insertTvWatchlist, [tvShow]),
          returnValue: _i6.Future<String>.value('')) as _i6.Future<String>);
  @override
  _i6.Future<String> removeWatchlist(_i13.TvShowTable? tvShow) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [tvShow]),
          returnValue: _i6.Future<String>.value('')) as _i6.Future<String>);
  @override
  _i6.Future<_i13.TvShowTable?> getTvById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvById, [id]),
              returnValue: _i6.Future<_i13.TvShowTable?>.value())
          as _i6.Future<_i13.TvShowTable?>);
  @override
  _i6.Future<List<_i13.TvShowTable>> getWatchlistTvs() => (super.noSuchMethod(
          Invocation.method(#getWatchlistTvs, []),
          returnValue:
              _i6.Future<List<_i13.TvShowTable>>.value(<_i13.TvShowTable>[]))
      as _i6.Future<List<_i13.TvShowTable>>);
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i14.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i15.Database?> get database =>
      (super.noSuchMethod(Invocation.getter(#database),
              returnValue: _i6.Future<_i15.Database?>.value())
          as _i6.Future<_i15.Database?>);
  @override
  _i6.Future<int> insertMovieWatchlist(_i16.MovieTable? movie) =>
      (super.noSuchMethod(Invocation.method(#insertMovieWatchlist, [movie]),
          returnValue: _i6.Future<int>.value(0)) as _i6.Future<int>);
  @override
  _i6.Future<int> insertTvShowWatchlist(_i13.TvShowTable? tvShow) =>
      (super.noSuchMethod(Invocation.method(#insertTvShowWatchlist, [tvShow]),
          returnValue: _i6.Future<int>.value(0)) as _i6.Future<int>);
  @override
  _i6.Future<int> removeMovieWatchlist(_i16.MovieTable? movie) =>
      (super.noSuchMethod(Invocation.method(#removeMovieWatchlist, [movie]),
          returnValue: _i6.Future<int>.value(0)) as _i6.Future<int>);
  @override
  _i6.Future<int> removeTvWatchlist(_i13.TvShowTable? tvShow) =>
      (super.noSuchMethod(Invocation.method(#removeTvWatchlist, [tvShow]),
          returnValue: _i6.Future<int>.value(0)) as _i6.Future<int>);
  @override
  _i6.Future<Map<String, dynamic>?> getWatchlistMovieById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getWatchlistMovieById, [id]),
              returnValue: _i6.Future<Map<String, dynamic>?>.value())
          as _i6.Future<Map<String, dynamic>?>);
  @override
  _i6.Future<Map<String, dynamic>?> getWatchlistTvById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getWatchlistTvById, [id]),
              returnValue: _i6.Future<Map<String, dynamic>?>.value())
          as _i6.Future<Map<String, dynamic>?>);
  @override
  _i6.Future<List<Map<String, dynamic>>> getWatchlistMovies() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistMovies, []),
              returnValue: _i6.Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i6.Future<List<Map<String, dynamic>>>);
  @override
  _i6.Future<List<Map<String, dynamic>>> getWatchlistTvShows() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistTvShows, []),
              returnValue: _i6.Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i6.Future<List<Map<String, dynamic>>>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i4.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i4.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#head, [url], {#headers: headers}),
              returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_2(
                  this, Invocation.method(#head, [url], {#headers: headers}))))
          as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#get, [url], {#headers: headers}),
              returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_2(
                  this, Invocation.method(#get, [url], {#headers: headers}))))
          as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> post(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i17.Encoding? encoding}) =>
      (super
          .noSuchMethod(Invocation.method(#post, [url], {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_2(
                  this,
                  Invocation.method(#post, [
                    url
                  ], {
                    #headers: headers,
                    #body: body,
                    #encoding: encoding
                  })))) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> put(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i17.Encoding? encoding}) =>
      (super
          .noSuchMethod(Invocation.method(#put, [url], {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_2(
                  this,
                  Invocation.method(#put, [
                    url
                  ], {
                    #headers: headers,
                    #body: body,
                    #encoding: encoding
                  })))) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> patch(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i17.Encoding? encoding}) =>
      (super
          .noSuchMethod(Invocation.method(#patch, [url], {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_2(
                  this,
                  Invocation.method(#patch, [
                    url
                  ], {
                    #headers: headers,
                    #body: body,
                    #encoding: encoding
                  })))) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> delete(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i17.Encoding? encoding}) =>
      (super
          .noSuchMethod(Invocation.method(#delete, [url], {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: _i6.Future<_i4.Response>.value(_FakeResponse_2(
                  this,
                  Invocation.method(#delete, [
                    url
                  ], {
                    #headers: headers,
                    #body: body,
                    #encoding: encoding
                  })))) as _i6.Future<_i4.Response>);
  @override
  _i6.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#read, [url], {#headers: headers}),
          returnValue: _i6.Future<String>.value('')) as _i6.Future<String>);
  @override
  _i6.Future<_i18.Uint8List> readBytes(Uri? url,
          {Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#readBytes, [url], {#headers: headers}),
              returnValue: _i6.Future<_i18.Uint8List>.value(_i18.Uint8List(0)))
          as _i6.Future<_i18.Uint8List>);
  @override
  _i6.Future<_i4.StreamedResponse> send(_i4.BaseRequest? request) =>
      (super.noSuchMethod(Invocation.method(#send, [request]),
              returnValue: _i6.Future<_i4.StreamedResponse>.value(
                  _FakeStreamedResponse_3(
                      this, Invocation.method(#send, [request]))))
          as _i6.Future<_i4.StreamedResponse>);
  @override
  void close() => super.noSuchMethod(Invocation.method(#close, []),
      returnValueForMissingStub: null);
}
